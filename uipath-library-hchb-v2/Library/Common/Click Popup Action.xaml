<Activity mc:Ignorable="sap sap2010" x:Class="Click_Popup_Action" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:eue="clr-namespace:Element5_Core.Utils.Exception;assembly=Element5.Core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Popup Name or Window Title in which button has to be Clicked" Name="Title" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Action Name which has to be clicked" Name="ActionName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Enter the Second Line of the item as in the Screen, only if there is second line in the Action name(Optional)" Name="ActionNameAnchor" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1440,4513</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Click_Popup_Action_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>Element5_Core.Utils.Exception</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>Element5.Core</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This Module Clicks on the Action Name given as input on the popup with the Title given as input." DisplayName="ClickPopupAction" sap:VirtualizedContainerService.HintSize="1450,4448" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="https://cv-2021-06-uatautomation.services.e5.ai" Name="CV_URL" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="ClickPopupAction-Try Catch" sap:VirtualizedContainerService.HintSize="1408,4325" sap2010:WorkflowViewState.IdRef="TryCatch_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="Validate the input arguments and clicks on the 'ActionName' given as input arguement on the popup." DisplayName="ClickPopupAction" sap:VirtualizedContainerService.HintSize="1370,3596" sap2010:WorkflowViewState.IdRef="Sequence_12">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1328,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Click Popup Action Module Started&quot;]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1328,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Invoke Lazyinit&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Lazy Init Library workflow" sap:VirtualizedContainerService.HintSize="1328,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Lazy Init Library.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:String" x:Key="ConfigNamespace">
                <Literal x:TypeArguments="x:String">E5.M.HCHB</Literal>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="ConfigYAMLPath">
                <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.Combine(IO.Directory.GetCurrentDirectory, &quot;data\Config.yml&quot;)" />
              </InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1328,91" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;Attaching the &quot;+Title+&quot; popoup.&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <TryCatch DisplayName="Check popup exist ? Try Catch" sap:VirtualizedContainerService.HintSize="1328,2797" sap2010:WorkflowViewState.IdRef="TryCatch_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" sap2010:Annotation.AnnotationText="Check whether the popup with the given 'Title' exist or not." CvMethod="ElementDetection, OCR" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DisplayName="CV Screen Scope 'Popup'" sap:VirtualizedContainerService.HintSize="1290,2068" sap2010:WorkflowViewState.IdRef="CVScope_5" Server="[CV_URL]" Version="V2">
                <p:CVScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1100,1634" sap2010:WorkflowViewState.IdRef="Sequence_26">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="ActionNameExist" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1256,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Check for &quot;+ActionName+&quot; exist in the Popup&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <If sap2010:Annotation.AnnotationText="Checks if the &quot;Action&quot; to click is present by checking if any value is passed for input argument 'ActionNameAnchor'." Condition="[string.IsNullOrEmpty(ActionNameAnchor)]" DisplayName="If - Action Name (in Single or Double Line)" sap:VirtualizedContainerService.HintSize="1256,246" sap2010:WorkflowViewState.IdRef="If_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <p:CvElementExistsWithDescriptor Descriptor="[&quot;Target: Text '&quot;+ActionName.ToString+&quot;' (179,321,181,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Element Action Name Exists " sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_3" Result="[ActionNameExist]" Version="V2">
                            <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                              <uc:CvDescriptor>
                                <uc:CvDescriptor.Target>
                                  <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="179, 321, 181, 13" ElementType="Text" Text="Review Claims Audit Report" />
                                </uc:CvDescriptor.Target>
                              </uc:CvDescriptor>
                            </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                          </p:CvElementExistsWithDescriptor>
                        </If.Then>
                        <If.Else>
                          <p:CvElementExistsWithDescriptor DesignTimeScaleFactor="{x:Null}" Descriptor="[&quot;Target: Text '&quot;+ActionName.ToString+&quot;' (657,534,53,13)&quot; +&#xA;&quot;Anchor: Text '&quot;+ActionNameAnchor.ToString+&quot;' (642,549,83,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DisplayName="CV Element Action Name(in Two Lines)Exists" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_4" Result="[ActionNameExist]" Version="V2" />
                        </If.Else>
                      </If>
                      <If sap2010:Annotation.AnnotationText="If the required &quot;Action&quot; element to click on is present, a click action is performed on it. Else an exception (ACTION_NAME_NOT_FOUND_IN_THE_POPUP) is thrown." Condition="[ActionNameExist]" DisplayName="Action Name exist?" sap:VirtualizedContainerService.HintSize="1256,1442" sap2010:WorkflowViewState.IdRef="If_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Click Action Name" sap:VirtualizedContainerService.HintSize="835,1264" sap2010:WorkflowViewState.IdRef="Sequence_24">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="793,91" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Click on the action name in the Popup&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <TryCatch DisplayName="Action Name-Try Catch" sap:VirtualizedContainerService.HintSize="793,1041" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <TryCatch.Try>
                                <Sequence DisplayName="Action Name" sap:VirtualizedContainerService.HintSize="755,417" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If sap2010:Annotation.AnnotationText="Checks if the action name is single or double line by checking the input 'ActionNameAnchor' for Null or Empty. And then a click action is performed on the &quot;Action&quot; element." Condition="[string.IsNullOrEmpty(ActionNameAnchor)]" DisplayName="Is ActionNameAnchor Exist?" sap:VirtualizedContainerService.HintSize="713,325" sap2010:WorkflowViewState.IdRef="If_7">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text '&quot;+ActionName.ToString+&quot;' (161,59,217,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Click - Action Name" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_3" InformativeScreenshot="68dc0be88c462b1ee09251e93e5f0dae" KeyModifiers="None" MouseButton="BTN_LEFT" Version="V2">
                                        <p:CvClickWithDescriptor.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </p:CvClickWithDescriptor.CursorPosition>
                                        <p:CvClickWithDescriptor.DesignTimeDescriptor>
                                          <uc:CvDescriptor>
                                            <uc:CvDescriptor.Target>
                                              <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="161, 59, 217, 13" ElementType="Text" Text="Review Episode Summary Report" />
                                            </uc:CvDescriptor.Target>
                                          </uc:CvDescriptor>
                                        </p:CvClickWithDescriptor.DesignTimeDescriptor>
                                        <p:CvClickWithDescriptor.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="cae99b1a-47ad-47d0-b814-ccab95dbb21c">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </p:CvClickWithDescriptor.Target>
                                      </p:CvClickWithDescriptor>
                                    </If.Then>
                                    <If.Else>
                                      <p:CvClickWithDescriptor DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text '&quot;+ActionName.ToString+&quot;' (657,534,53,13)&quot; +&#xA;&quot;Anchor: Text '&quot;+ActionNameAnchor.ToString+&quot;' (642,549,83,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Click - Action Name(in Two Lines)" sap:VirtualizedContainerService.HintSize="334,136" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_4" InformativeScreenshot="68dc0be88c462b1ee09251e93e5f0dae" KeyModifiers="None" MouseButton="BTN_RIGHT" Version="V2">
                                        <p:CvClickWithDescriptor.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </p:CvClickWithDescriptor.CursorPosition>
                                        <p:CvClickWithDescriptor.DesignTimeDescriptor>
                                          <uc:CvDescriptor>
                                            <uc:CvDescriptor.Target>
                                              <uc:CvElementDescriptor CellExtraInfo="{x:Null}" DesignTimeArea="161, 59, 217, 13" ElementType="Text" Text="Review Episode Summary Report" />
                                            </uc:CvDescriptor.Target>
                                          </uc:CvDescriptor>
                                        </p:CvClickWithDescriptor.DesignTimeDescriptor>
                                        <p:CvClickWithDescriptor.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="cae99b1a-47ad-47d0-b814-ccab95dbb21c">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </p:CvClickWithDescriptor.Target>
                                      </p:CvClickWithDescriptor>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="759,314" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Error" Message="[&quot;Error in clicking Action in Popup&quot;]" />
                                      <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_13" MessageCode="ERROR_IN_CLICK_ACTION" __Prefix="[IO.Directory.GetCurrentDirectory]">
                                        <eue:Throw_Business_Exception.ExtraMessage>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                                          </InArgument>
                                        </eue:Throw_Business_Exception.ExtraMessage>
                                      </eue:Throw_Business_Exception>
                                    </Sequence>
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_25">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Error" Message="[&quot;Required Action Name is not found in the Popup&quot;]" />
                            <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_11" MessageCode="ACTION_NAME_NOT_FOUND_IN_THE_POPUP" __Prefix="[IO.Directory.GetCurrentDirectory]">
                              <eue:Throw_Business_Exception.ExtraMessage>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                                </InArgument>
                              </eue:Throw_Business_Exception.ExtraMessage>
                            </eue:Throw_Business_Exception>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </p:CVScope.Body>
                <p:CVScope.DesignTimeCache>
                  <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" />
                </p:CVScope.DesignTimeCache>
                <p:CVScope.DesignTimeCacheContainer>
                  <uc:CvCacheContainer>
                    <uc:CvCacheContainer.Caches>
                      <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                        <uc:CVCache OcrTexts="{x:Null}" DisplayName="Main Screen" Id="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" InformativeScreenshot="a24a96ea0816ac580fd06e208043746b" LogicalPosition="373, 0" Position="373, 0">
                          <uc:CVCache.CvUiElements>
                            <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="64">
                              <uc:CvElementInfo Category="Button" Region="323, 156, 87, 32" />
                              <uc:CvElementInfo Category="Button" Region="225, 156, 89, 32" />
                              <uc:CvElementInfo Category="Button" Region="95, 421, 359, 27" />
                              <uc:CvElementInfo Category="Button" Region="162, 532, 222, 43" />
                              <uc:CvElementInfo Category="Button" Region="391, 531, 122, 41" />
                              <uc:CvElementInfo Category="Button" Region="93, 457, 361, 27" />
                              <uc:CvElementInfo Category="Button" Region="92, 385, 351, 27" />
                              <uc:CvElementInfo Category="Button" Region="132, 156, 87, 32" />
                              <uc:CvElementInfo Category="Button" Region="21, 156, 88, 33" />
                              <uc:CvElementInfo Category="Button" Region="100, 314, 347, 27" />
                              <uc:CvElementInfo Category="Button" Region="39, 532, 116, 42" />
                              <uc:CvElementInfo Category="Button" Region="419, 157, 90, 31" />
                              <uc:CvElementInfo Category="ArrowButton" Region="513, 31, 18, 18" />
                              <uc:CvElementInfo Category="CheckBox" Region="66, 317, 19, 18" />
                              <uc:CvElementInfo Category="ArrowButton" Region="515, 506, 15, 19" />
                              <uc:CvElementInfo Category="Button" Region="100, 349, 345, 27" />
                              <uc:CvElementInfo Category="Icon" Region="425, 353, 16, 18" />
                              <uc:CvElementInfo Category="Button" Region="98, 493, 356, 28" />
                              <uc:CvElementInfo Category="Icon" Region="424, 319, 17, 17" />
                              <uc:CvElementInfo Category="Icon" Region="425, 389, 18, 18" />
                              <uc:CvElementInfo Category="CheckBox" Region="66, 351, 19, 19" />
                              <uc:CvElementInfo Category="Icon" Region="76, 164, 17, 19" />
                              <uc:CvElementInfo Category="CheckBox" Region="66, 387, 17, 19" />
                              <uc:CvElementInfo Category="Icon" Region="475, 545, 20, 19" />
                              <uc:CvElementInfo Category="CheckBox" Region="66, 424, 19, 18" />
                              <uc:CvElementInfo Category="Icon" Region="205, 202, 16, 16" />
                              <uc:CvElementInfo Category="Icon" Region="65, 494, 22, 22" />
                              <uc:CvElementInfo Category="CheckBox" Region="66, 460, 19, 20" />
                              <uc:CvElementInfo Category="ArrowButton" Region="491, 202, 17, 20" />
                              <uc:CvElementInfo Category="Icon" Region="494, 204, 13, 15" />
                              <uc:CvElementInfo Category="ArrowButton" Region="204, 202, 17, 17" />
                              <uc:CvElementInfo Category="InputBox" Region="98, 493, 354, 27" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="65, 422, 20, 20" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="65, 458, 20, 22" />
                              <uc:CvElementInfo Category="Icon" Confidence="Runtime" Region="65, 350, 20, 20" />
                              <uc:CvElementInfo Category="CheckBox" Confidence="Runtime" Region="65, 496, 20, 20" />
                              <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="65, 496, 22, 21" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 460, 20, 20" />
                              <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="204, 202, 17, 17" />
                              <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="64, 459, 22, 20" />
                              <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="65, 424, 20, 18" />
                              <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="65, 316, 20, 19" />
                              <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="94, 349, 358, 27" />
                              <uc:CvElementInfo Category="Button" Confidence="Runtime" Region="65, 351, 20, 19" />
                              <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="65, 350, 22, 19" />
                              <uc:CvElementInfo Category="MaximizeButton" Confidence="Runtime" Region="424, 318, 18, 17" />
                              <uc:CvElementInfo Category="MaximizeButton" Confidence="Runtime" Region="424, 389, 18, 18" />
                              <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="90, 456, 366, 29" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 423, 20, 19" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 316, 20, 19" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 351, 21, 20" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 387, 19, 19" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="65, 496, 21, 20" />
                              <uc:CvElementInfo Category="RadioButton" Confidence="Runtime" Region="205, 202, 15, 15" />
                              <uc:CvElementInfo Category="InputBox" Confidence="Runtime" Region="65, 496, 21, 20" />
                              <uc:CvElementInfo Category="ArrowButton" Confidence="Runtime" Region="65, 494, 22, 20" />
                            </scg:List>
                          </uc:CVCache.CvUiElements>
                        </uc:CVCache>
                      </scg:List>
                    </uc:CvCacheContainer.Caches>
                  </uc:CvCacheContainer>
                </p:CVScope.DesignTimeCacheContainer>
                <p:CVScope.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <p1:UiPathScreenOCR ApiKey="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ComputeSkewAngle="False" DisplayName="UiPath Screen OCR" Endpoint="[CV_URL]" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="UiPathScreenOCR_1" Image="[Image]" Language="auto" Profile="Screen" Scale="1" Timeout="100000" />
                  </ActivityFunc>
                </p:CVScope.OCREngine>
                <p:CVScope.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="589b7c9a-b672-4b38-8457-a48f0c821a03" Selector="&lt;wnd app='wfica32.exe' cls='Transparent Windows Client' title='{{Title}}*' /&gt;" WaitForReady="INTERACTIVE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </p:CVScope.Target>
                <p:CVScope.UseLocalServer>
                  <InArgument x:TypeArguments="x:Boolean" />
                </p:CVScope.UseLocalServer>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:CVScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1294,314" sap2010:WorkflowViewState.IdRef="Catch`1_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Error" Message="[&quot;Required Popup Not found&quot;]" />
                    <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_10" MessageCode="REQUIRED_POPUP_NOT_FOUND" __Prefix="[IO.Directory.GetCurrentDirectory]">
                      <eue:Throw_Business_Exception.ExtraMessage>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                        </InArgument>
                      </eue:Throw_Business_Exception.ExtraMessage>
                    </eue:Throw_Business_Exception>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1294,104" sap2010:WorkflowViewState.IdRef="Catch`1_11">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_3" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1328,91" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Click Popup Action Module ended&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1374,314" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Click Popup Action Module failed&quot; + exception.Message]" />
              <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_5" MessageCode="CLICK_POPUP_ACTION_MODULE_FAILED" __Prefix="[IO.Directory.GetCurrentDirectory]">
                <eue:Throw_Business_Exception.ExtraMessage>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                  </InArgument>
                </eue:Throw_Business_Exception.ExtraMessage>
              </eue:Throw_Business_Exception>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1374,104" sap2010:WorkflowViewState.IdRef="Catch`1_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>