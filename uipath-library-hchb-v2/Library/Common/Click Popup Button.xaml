<Activity mc:Ignorable="sap sap2010" x:Class="ClickPopupButton" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:eue="clr-namespace:Element5_Core.Utils.Exception;assembly=Element5.Core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/cv" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:uc="clr-namespace:UiPath.CV;assembly=UiPath.CV" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Popup Name or Window Title in which button has to be Clicked" Name="Title" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Button Name which has to be clicked" Name="ButtonName" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Window title which is expected as result" Name="ExpectedTitle" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1555,6391</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ClickPopupButton_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="72">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>Element5_Core.Utils.Exception</x:String>
      <x:String>UiPath.Activities.System.Properties</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="68">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Element5.Core</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="This Module Clicks on the Button Name given as input on the popup with the Title given as input." DisplayName="ClickPopupButton" sap:VirtualizedContainerService.HintSize="1741,6227" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1699,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Click Popup Button module Started&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1699,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Invoke Lazyinit&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Lazy Init Library workflow" sap:VirtualizedContainerService.HintSize="1699,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Lazy Init Library.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="ConfigNamespace">E5.HCHB</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ConfigYAMLPath">[Path.Combine(IO.Directory.GetCurrentDirectory, "data\Config.yml")]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <TryCatch DisplayName="ClickPopupButton-Try Catch" sap:VirtualizedContainerService.HintSize="1699,5559" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence sap2010:Annotation.AnnotationText="This Sequence checks for the button with the given 'ButtonName' and clicks it, if not found clicks the scroll down button once and searches for the same button and clicks it. If the button is not found after scroll down, an exception is thrown. It also checks the expected pop up as given in the input 'ExpectedTitle' appears or not after the button click." DisplayName="ClickPopupButton" sap:VirtualizedContainerService.HintSize="1661,4830" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1619,91" sap2010:WorkflowViewState.IdRef="LogMessage_17" Level="Info" Message="[&quot;Attaching the &quot;+Title+&quot; popup.&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <TryCatch DisplayName="ClickPopupButton-Try Catch" sap:VirtualizedContainerService.HintSize="1619,3572" sap2010:WorkflowViewState.IdRef="TryCatch_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <p:CVScope ContinueOnError="{x:Null}" DelayBefore="{x:Null}" Server="{x:Null}" CvMethod="ElementDetection, OCR" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DisplayName="CV Screen Scope 'Popup'" sap:VirtualizedContainerService.HintSize="1581,2843" sap2010:WorkflowViewState.IdRef="CVScope_1" Version="V2">
                <p:CVScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="CVSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="663,1238" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:Boolean" Name="ScrollBarExist" />
                        <Variable x:TypeArguments="x:Boolean" Name="ButtonNameExist" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1547,91" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Check for &quot;+ButtonName+&quot; Button Name in the Popup&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <p:CvElementExistsWithDescriptor sap2010:Annotation.AnnotationText="Checks for the &quot;ButtonName&quot; button to click is present in the Popup." Descriptor="[&quot;Target: Text '&quot;+ButtonName.ToString+&quot;' (179,321,181,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Element Button Name Exists " sap:VirtualizedContainerService.HintSize="1547,178" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_2" InformativeScreenshot="23261785709157e8e223fe3e58bed53d" Result="[ButtonNameExist]" Version="V2">
                        <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                          <uc:CvDescriptor>
                            <uc:CvDescriptor.Target>
                              <uc:CvElementDescriptor DesignTimeArea="179, 321, 181, 13" ElementType="Text" Text="Review Claims Audit Report" />
                            </uc:CvDescriptor.Target>
                          </uc:CvDescriptor>
                        </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </p:CvElementExistsWithDescriptor>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1547,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[ButtonNameExist.ToString]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                      <If sap2010:Annotation.AnnotationText="If the required button is found, a click action is performed on it. &#xA;Else a scroll down action is performed and again it is checked if the required button is present. If the required button is found, a click action is performed on it, else an exception is thrown." Condition="[ButtonNameExist]" DisplayName="Button Name exist?" sap:VirtualizedContainerService.HintSize="1547,2052" sap2010:WorkflowViewState.IdRef="If_2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence sap2010:Annotation.AnnotationText="If Button is found" DisplayName="Click Button Name" sap:VirtualizedContainerService.HintSize="376,432" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Click on the button name in the Popup&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <p:CvClickWithDescriptor CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click the button with the value provided in 'ButtonName' argument." ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text '&quot;+ButtonName.ToString+&quot;' (196,88,167,13)&quot; +&#xA;&quot;Anchor: Button (173,79,216,27)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Click - Text" sap:VirtualizedContainerService.HintSize="334,178" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_1" InformativeScreenshot="1719864d7da6262c33602c4c0d3640df" KeyModifiers="None" MouseButton="BTN_LEFT" Version="V2">
                              <p:CvClickWithDescriptor.CursorPosition>
                                <ui:CursorPosition Position="Center">
                                  <ui:CursorPosition.OffsetX>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetX>
                                  <ui:CursorPosition.OffsetY>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:CursorPosition.OffsetY>
                                </ui:CursorPosition>
                              </p:CvClickWithDescriptor.CursorPosition>
                              <p:CvClickWithDescriptor.DesignTimeDescriptor>
                                <uc:CvDescriptor>
                                  <uc:CvDescriptor.Anchors>
                                    <x:Array Type="uc:CvElementDescriptor">
                                      <uc:CvElementDescriptor DesignTimeArea="173, 79, 216, 27" ElementType="Button" />
                                    </x:Array>
                                  </uc:CvDescriptor.Anchors>
                                  <uc:CvDescriptor.Target>
                                    <uc:CvElementDescriptor DesignTimeArea="196, 88, 167, 13" ElementType="Text" Text="Obtain Hospice CTI Order" />
                                  </uc:CvDescriptor.Target>
                                </uc:CvDescriptor>
                              </p:CvClickWithDescriptor.DesignTimeDescriptor>
                              <p:CvClickWithDescriptor.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="cae99b1a-47ad-47d0-b814-ccab95dbb21c">
                                  <ui:Target.TimeoutMS>
                                    <InArgument x:TypeArguments="x:Int32" />
                                  </ui:Target.TimeoutMS>
                                  <ui:Target.WaitForReady>
                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                  </ui:Target.WaitForReady>
                                </ui:Target>
                              </p:CvClickWithDescriptor.Target>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:CvClickWithDescriptor>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:Annotation.AnnotationText="If Button is not found" DisplayName="Button Not Found" sap:VirtualizedContainerService.HintSize="1126,1863" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1084,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Check for Scroll bar arrow mark&quot;]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:LogMessage>
                            <p:CvElementExistsWithDescriptor sap2010:Annotation.AnnotationText="Check whether the scroll down bar arrow mark exists or not." Descriptor="[&quot;Target: ArrowButton (515,506,15,19)&quot; +&#xA;&quot;Anchor: Icon (475,545,20,19)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Element Exists - ArrowButton" sap:VirtualizedContainerService.HintSize="1084,178" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_1" InformativeScreenshot="7f4fa72bbfc795281cdc8c936814f4a1" Result="[ScrollBarExist]" Version="V2">
                              <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                                <uc:CvDescriptor>
                                  <uc:CvDescriptor.Anchors>
                                    <x:Array Type="uc:CvElementDescriptor">
                                      <uc:CvElementDescriptor DesignTimeArea="475, 545, 20, 19" ElementType="Icon" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAABQAAAATCAYAAACQjC21AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHqSURBVDhPzZTLy6lBHMfP/4SNXJNCWYqNBcrCZWGBFAs7G2VDWFgISSmKjbCxZaGslGvJQpQkyuX79ptznjeTS++pszhTn8UzM9/PM89vZp5fIpEI/5KPQq1WC5PJhFAoxLBYLDAYDC/nCrwUKhQK+Hw+dDodHA4HPLZ+v49oNAq1Wv2UI56EJEsmk9jtdox6vY5EIsEoFouYzWbY7/eo1WrQaDRclngS+v1+bDYbhsfjYSGJRMKgVWWzWSa8Xq9Ip9NcluCEVLN2u437/Q673f4tEqC++XyOfD7PhJPJBGaz+b2QBpfLJbrdLsRiMYfX68V2u2UrlMlkKJfLbKWRSOS90OFw4HK5IB6Pc7JAIMDCVENhM5xOJ263G6v3o+OtUOgjGW1EqVTidvbHwvV6jUajwZ5dLhfG4zEKhQKUSuX3PII+nYR0hB77OaFOp0Ov18P5fEYwGMR0OkUmk4FKpeJCRqMRx+MRi8UCVquVG+OEBL2RhESz2YRcLmd1FMbppa1WiwkrlQqXJZ6EVKdqtcqEq9UKqVQKbrebEYvFMBqNmGwwGECv13NZ4klI0GGmmzEcDnE6nf5cut+NhLlc7qWMeCkUoJ8B/RToRhDhcBg2mw1SqfTlfOKjUIAEnySP/Ej4N/zvQhG+AG7TDFUXUGD9AAAAAElFTkSuQmCC" />
                                    </x:Array>
                                  </uc:CvDescriptor.Anchors>
                                  <uc:CvDescriptor.Target>
                                    <uc:CvElementDescriptor DesignTimeArea="515, 506, 15, 19" ElementType="ArrowButton" />
                                  </uc:CvDescriptor.Target>
                                </uc:CvDescriptor>
                              </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p:CvElementExistsWithDescriptor>
                            <If sap2010:Annotation.AnnotationText="If Scroll down bar exists, a click action is performed on it. If not, an exception (REQUIRED_BUTTON_NAME_NOT_FOUND) is thrown." Condition="[ScrollBarExist]" DisplayName="If ScrollBar exist" sap:VirtualizedContainerService.HintSize="1084,1391" sap2010:WorkflowViewState.IdRef="If_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Scroll Sequence" sap:VirtualizedContainerService.HintSize="663,1213" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="621,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Click on the scrollbar&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <p:CvClickWithDescriptor CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Clicks the scroll down bar arrow button." ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: ArrowButton (515,506,15,19) OffsetPoint: (1,-35)&quot; +&#xA;&quot;Anchor: ArrowButton (513,31,18,18)&quot; +&#xA;&quot;Anchor: Icon (475,545,20,19)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Click - Scrollbar" sap:VirtualizedContainerService.HintSize="621,167" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_2" InformativeScreenshot="9df554bce15b93b05cc0299a6b7d8a87" KeyModifiers="None" MouseButton="BTN_LEFT" Version="V2">
                                    <p:CvClickWithDescriptor.CursorPosition>
                                      <ui:CursorPosition Position="Center">
                                        <ui:CursorPosition.OffsetX>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetX>
                                        <ui:CursorPosition.OffsetY>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:CursorPosition.OffsetY>
                                      </ui:CursorPosition>
                                    </p:CvClickWithDescriptor.CursorPosition>
                                    <p:CvClickWithDescriptor.DesignTimeDescriptor>
                                      <uc:CvDescriptor TargetPointOffset="1, -35">
                                        <uc:CvDescriptor.Anchors>
                                          <x:Array Type="uc:CvElementDescriptor">
                                            <uc:CvElementDescriptor DesignTimeArea="513, 31, 18, 18" ElementType="ArrowButton" />
                                            <uc:CvElementDescriptor DesignTimeArea="475, 545, 20, 19" ElementType="Icon" ImageBase64="iVBORw0KGgoAAAANSUhEUgAAABQAAAATCAYAAACQjC21AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAHqSURBVDhPzZTLy6lBHMfP/4SNXJNCWYqNBcrCZWGBFAs7G2VDWFgISSmKjbCxZaGslGvJQpQkyuX79ptznjeTS++pszhTn8UzM9/PM89vZp5fIpEI/5KPQq1WC5PJhFAoxLBYLDAYDC/nCrwUKhQK+Hw+dDodHA4HPLZ+v49oNAq1Wv2UI56EJEsmk9jtdox6vY5EIsEoFouYzWbY7/eo1WrQaDRclngS+v1+bDYbhsfjYSGJRMKgVWWzWSa8Xq9Ip9NcluCEVLN2u437/Q673f4tEqC++XyOfD7PhJPJBGaz+b2QBpfLJbrdLsRiMYfX68V2u2UrlMlkKJfLbKWRSOS90OFw4HK5IB6Pc7JAIMDCVENhM5xOJ263G6v3o+OtUOgjGW1EqVTidvbHwvV6jUajwZ5dLhfG4zEKhQKUSuX3PII+nYR0hB77OaFOp0Ov18P5fEYwGMR0OkUmk4FKpeJCRqMRx+MRi8UCVquVG+OEBL2RhESz2YRcLmd1FMbppa1WiwkrlQqXJZ6EVKdqtcqEq9UKqVQKbrebEYvFMBqNmGwwGECv13NZ4klI0GGmmzEcDnE6nf5cut+NhLlc7qWMeCkUoJ8B/RToRhDhcBg2mw1SqfTlfOKjUIAEnySP/Ej4N/zvQhG+AG7TDFUXUGD9AAAAAElFTkSuQmCC" />
                                          </x:Array>
                                        </uc:CvDescriptor.Anchors>
                                        <uc:CvDescriptor.Target>
                                          <uc:CvElementDescriptor DesignTimeArea="515, 506, 15, 19" ElementType="ArrowButton" />
                                        </uc:CvDescriptor.Target>
                                      </uc:CvDescriptor>
                                    </p:CvClickWithDescriptor.DesignTimeDescriptor>
                                    <p:CvClickWithDescriptor.Target>
                                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="f703bb25-4abf-48af-9485-3c9e98081c4a">
                                        <ui:Target.TimeoutMS>
                                          <InArgument x:TypeArguments="x:Int32" />
                                        </ui:Target.TimeoutMS>
                                        <ui:Target.WaitForReady>
                                          <InArgument x:TypeArguments="ui:WaitForReady" />
                                        </ui:Target.WaitForReady>
                                      </ui:Target>
                                    </p:CvClickWithDescriptor.Target>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </p:CvClickWithDescriptor>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="621,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Check for Button name in the popup&quot;]">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:LogMessage>
                                  <p:CvElementExistsWithDescriptor sap2010:Annotation.AnnotationText="Checks for the &quot;ButtonName&quot; button to click is present in the Popup." Descriptor="[&quot;Target: Text '&quot;+ButtonName.ToString+&quot;' (179,321,181,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Element Button Name Exists " sap:VirtualizedContainerService.HintSize="621,178" sap2010:WorkflowViewState.IdRef="CvElementExistsWithDescriptor_3" InformativeScreenshot="23261785709157e8e223fe3e58bed53d" Result="[ButtonNameExist]" Version="V2">
                                    <p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                                      <uc:CvDescriptor>
                                        <uc:CvDescriptor.Target>
                                          <uc:CvElementDescriptor DesignTimeArea="179, 321, 181, 13" ElementType="Text" Text="Review Claims Audit Report" />
                                        </uc:CvDescriptor.Target>
                                      </uc:CvDescriptor>
                                    </p:CvElementExistsWithDescriptor.DesignTimeDescriptor>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </p:CvElementExistsWithDescriptor>
                                  <If sap2010:Annotation.AnnotationText="If the required button is found, a click action is performed on it. &#xA;Else an exception (REQUIRED_BUTTON_NAME_NOT_FOUND) is thrown." Condition="[ButtonNameExist]" DisplayName="If Button Name exist" sap:VirtualizedContainerService.HintSize="621,434" sap2010:WorkflowViewState.IdRef="If_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence DisplayName="Click on button Name" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Click on the button name in the Popup&quot;]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:LogMessage>
                                        <p:CvClickWithDescriptor CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click the button with the given 'ButtonName'." ClickType="CLICK_SINGLE" Descriptor="[&quot;Target: Text '&quot;+ButtonName.ToString+&quot;' (161,59,217,13)&quot;]" DesignTimeCacheId="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" DesignTimeScaleFactor="1" DisplayName="CV Click - Button Name" sap:VirtualizedContainerService.HintSize="334,167" sap2010:WorkflowViewState.IdRef="CvClickWithDescriptor_3" InformativeScreenshot="68dc0be88c462b1ee09251e93e5f0dae" KeyModifiers="None" MouseButton="BTN_LEFT" Version="V2">
                                          <p:CvClickWithDescriptor.CursorPosition>
                                            <ui:CursorPosition Position="Center">
                                              <ui:CursorPosition.OffsetX>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:CursorPosition.OffsetX>
                                              <ui:CursorPosition.OffsetY>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:CursorPosition.OffsetY>
                                            </ui:CursorPosition>
                                          </p:CvClickWithDescriptor.CursorPosition>
                                          <p:CvClickWithDescriptor.DesignTimeDescriptor>
                                            <uc:CvDescriptor>
                                              <uc:CvDescriptor.Target>
                                                <uc:CvElementDescriptor DesignTimeArea="161, 59, 217, 13" ElementType="Text" Text="Review Episode Summary Report" />
                                              </uc:CvDescriptor.Target>
                                            </uc:CvDescriptor>
                                          </p:CvClickWithDescriptor.DesignTimeDescriptor>
                                          <p:CvClickWithDescriptor.Target>
                                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="cae99b1a-47ad-47d0-b814-ccab95dbb21c">
                                              <ui:Target.TimeoutMS>
                                                <InArgument x:TypeArguments="x:Int32" />
                                              </ui:Target.TimeoutMS>
                                              <ui:Target.WaitForReady>
                                                <InArgument x:TypeArguments="ui:WaitForReady" />
                                              </ui:Target.WaitForReady>
                                            </ui:Target>
                                          </p:CvClickWithDescriptor.Target>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </p:CvClickWithDescriptor>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Required Button Name is not found in the Popup&quot;]" />
                                        <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_1" MessageCode="REQUIRED_BUTTON_NAME_NOT_FOUND" __Prefix="[IO.Directory.GetCurrentDirectory]">
                                          <eue:Throw_Business_Exception.ExtraMessage>
                                            <InArgument x:TypeArguments="x:String">
                                              <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                                            </InArgument>
                                          </eue:Throw_Business_Exception.ExtraMessage>
                                        </eue:Throw_Business_Exception>
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[&quot;Required Button Name is not found in the Popup&quot;]" />
                                  <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_3" MessageCode="REQUIRED_BUTTON_NAME_NOT_FOUND" __Prefix="[IO.Directory.GetCurrentDirectory]">
                                    <eue:Throw_Business_Exception.ExtraMessage>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                                      </InArgument>
                                    </eue:Throw_Business_Exception.ExtraMessage>
                                  </eue:Throw_Business_Exception>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </p:CVScope.Body>
                <p:CVScope.DesignTimeCache>
                  <uc:CVCache CvUiElements="{x:Null}" OcrTexts="{x:Null}" />
                </p:CVScope.DesignTimeCache>
                <p:CVScope.DesignTimeCacheContainer>
                  <uc:CvCacheContainer>
                    <uc:CvCacheContainer.Caches>
                      <scg:List x:TypeArguments="uc:CVCache" Capacity="1">
                        <uc:CVCache DisplayName="Main Screen" Id="3b9ec5ad-91da-4d79-9c31-b95bb3975cd0" InformativeScreenshot="8048754bd822bae074372345cf40a5ec" LogicalPosition="381, 201" OcrText="Obtain Hospice CTI Order for Medical Director for ELEMENTS, TEST2 I&#xA;Medical Director PHYSICIAN TBD&#xA;Obtain Hospice CTI Order&#xA;Stage Completed Cancel 0" Position="381, 201">
                          <uc:CVCache.CvUiElements>
                            <scg:List x:TypeArguments="uc:CvElementInfo" Capacity="8">
                              <uc:CvElementInfo Category="Button" Region="288, 127, 122, 43" />
                              <uc:CvElementInfo Category="Button" Region="126, 127, 154, 42" />
                              <uc:CvElementInfo Category="Button" Region="173, 79, 216, 27" />
                              <uc:CvElementInfo Category="Icon" Region="374, 141, 19, 20" />
                              <uc:CvElementInfo Category="CheckBox" Confidence="Runtime" Region="139, 83, 18, 19" />
                            </scg:List>
                          </uc:CVCache.CvUiElements>
                          <uc:CVCache.OcrTexts>
                            <scg:List x:TypeArguments="uc:OcrTextInfo" Capacity="32">
                              <uc:OcrTextInfo Region="10, 10, 35, 11" Text="Obtain" />
                              <uc:OcrTextInfo Region="49, 11, 42, 13" Text="Hospice" />
                              <uc:OcrTextInfo Region="95, 11, 17, 10" Text="CTI" />
                              <uc:OcrTextInfo Region="116, 11, 29, 10" Text="Order" />
                              <uc:OcrTextInfo Region="148, 11, 15, 10" Text="for" />
                              <uc:OcrTextInfo Region="167, 11, 41, 9" Text="Medical" />
                              <uc:OcrTextInfo Region="212, 11, 42, 9" Text="Director" />
                              <uc:OcrTextInfo Region="256, 11, 16, 9" Text="for" />
                              <uc:OcrTextInfo Region="275, 11, 58, 11" Text="ELEMENTS," />
                              <uc:OcrTextInfo Region="337, 10, 32, 11" Text="TEST2" />
                              <uc:OcrTextInfo Region="373, 12, 2, 9" Text="I" />
                              <uc:OcrTextInfo Region="146, 59, 51, 10" Text="Medical" />
                              <uc:OcrTextInfo Region="201, 59, 55, 10" Text="Director" />
                              <uc:OcrTextInfo Region="264, 59, 70, 10" Text="PHYSICIAN" />
                              <uc:OcrTextInfo Region="338, 59, 25, 11" Text="TBD" />
                              <uc:OcrTextInfo Region="196, 88, 43, 10" Text="Obtain" />
                              <uc:OcrTextInfo Region="243, 88, 54, 13" Text="Hospice" />
                              <uc:OcrTextInfo Region="300, 88, 22, 10" Text="CTI" />
                              <uc:OcrTextInfo Region="327, 88, 36, 11" Text="Order" />
                              <uc:OcrTextInfo Region="148, 145, 39, 13" Text="Stage" />
                              <uc:OcrTextInfo Region="191, 145, 70, 13" Text="Completed" />
                              <uc:OcrTextInfo Region="321, 145, 44, 11" Text="Cancel" />
                              <uc:OcrTextInfo Region="378, 145, 12, 12" Text="0" />
                            </scg:List>
                          </uc:CVCache.OcrTexts>
                        </uc:CVCache>
                      </scg:List>
                    </uc:CvCacheContainer.Caches>
                  </uc:CvCacheContainer>
                </p:CVScope.DesignTimeCacheContainer>
                <p:CVScope.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                    <ActivityFunc.Argument>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument>
                    <uoa:OmniPageOCR Language="{x:Null}" Output="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Basic" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="OmniPageOCR_1" Image="[Image]" Profile="Scan" />
                  </ActivityFunc>
                </p:CVScope.OCREngine>
                <p:CVScope.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="589b7c9a-b672-4b38-8457-a48f0c821a03" InformativeScreenshot="e01946e6ca1088e67aa949893745acec" Selector="&lt;wnd app='wfica32.exe' cls='Transparent Windows Client' title='{{Title}}*' /&gt;" WaitForReady="INTERACTIVE">
                    <ui:Target.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:Target.TimeoutMS>
                  </ui:Target>
                </p:CVScope.Target>
                <p:CVScope.UseLocalServer>
                  <InArgument x:TypeArguments="x:Boolean" />
                </p:CVScope.UseLocalServer>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </p:CVScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1585,314" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Required Popup Not found&quot;]" />
                    <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_4" MessageCode="REQUIRED_POPUP_NOT_FOUND" __Prefix="[IO.Directory.GetCurrentDirectory]">
                      <eue:Throw_Business_Exception.ExtraMessage>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                        </InArgument>
                      </eue:Throw_Business_Exception.ExtraMessage>
                    </eue:Throw_Business_Exception>
                  </Sequence>
                </ActivityAction>
              </Catch>
              <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1585,104" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                  </ActivityAction.Argument>
                  <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
          <TryCatch DisplayName="Expected Popup-Try Catch" sap:VirtualizedContainerService.HintSize="1619,953" sap2010:WorkflowViewState.IdRef="TryCatch_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch.Try>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Expected popup'" sap:VirtualizedContainerService.HintSize="434,329" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="6f0edbe3c18a675f5ca60496b98dc52b" Selector="&lt;wnd app='wfica32.exe' cls='Transparent Windows Client' title='{{ExpectedTitle}}*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_12">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[ExpectedTitle+&quot; Expected Popup/Window is available&quot;]">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:LogMessage>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:WindowScope>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="438,314" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Error" Message="[&quot;Expected Window or Popup Name is not found&quot;]" />
                    <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_6" MessageCode="EXPECTED_WINDOW_TITLE_NOT_FOUND" __Prefix="[IO.Directory.GetCurrentDirectory]">
                      <eue:Throw_Business_Exception.ExtraMessage>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                        </InArgument>
                      </eue:Throw_Business_Exception.ExtraMessage>
                    </eue:Throw_Business_Exception>
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1665,314" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Error Sequence" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Click Popup Button Module failed&quot; + exception.Message]" />
              <eue:Throw_Business_Exception DisplayName="Throw Business Exception" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_Business_Exception_5" MessageCode="CLICK_POPUP_BUTTON_MODULE_FAILED" __Prefix="[IO.Directory.GetCurrentDirectory]">
                <eue:Throw_Business_Exception.ExtraMessage>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" DisplayName="Literal&lt;String&gt;" Value="" />
                  </InArgument>
                </eue:Throw_Business_Exception.ExtraMessage>
              </eue:Throw_Business_Exception>
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="1665,104" sap2010:WorkflowViewState.IdRef="Catch`1_4">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Rethrow sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1699,91" sap2010:WorkflowViewState.IdRef="LogMessage_16" Level="Info" Message="[&quot;Click Popup Button module ended&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>